{"remainingRequest":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\документы\\GitHub\\one\\home\\src\\components\\ArticleActions.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\документы\\GitHub\\one\\home\\src\\components\\ArticleActions.vue","mtime":1626212836000},{"path":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680503952892},{"path":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1680504144232},{"path":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680503952892},{"path":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1680504319910}],"contextDependencies":[],"result":["\nimport { mapGetters } from \"vuex\";\nimport {\n  FAVORITE_ADD,\n  FAVORITE_REMOVE,\n  ARTICLE_DELETE,\n  FETCH_PROFILE_FOLLOW,\n  FETCH_PROFILE_UNFOLLOW\n} from \"@/store/actions.type\";\n\nexport default {\n  name: \"RwvArticleActions\",\n  props: {\n    article: { type: Object, required: true },\n    canModify: { type: Boolean, required: true }\n  },\n  computed: {\n    ...mapGetters([\"profile\", \"isAuthenticated\"]),\n    editArticleLink() {\n      return { name: \"article-edit\", params: { slug: this.article.slug } };\n    },\n    toggleFavoriteButtonClasses() {\n      return {\n        \"btn-primary\": this.article.favorited,\n        \"btn-outline-primary\": !this.article.favorited\n      };\n    },\n    followUserLabel() {\n      return `${this.profile.following ? \"Unfollow\" : \"Follow\"} ${\n        this.article.author.username\n      }`;\n    },\n    favoriteArticleLabel() {\n      return this.article.favorited ? \"Unfavorite Article\" : \"Favorite Article\";\n    },\n    favoriteCounter() {\n      return `(${this.article.favoritesCount})`;\n    }\n  },\n  methods: {\n    toggleFavorite() {\n      if (!this.isAuthenticated) {\n        this.$router.push({ name: \"login\" });\n        return;\n      }\n      const action = this.article.favorited ? FAVORITE_REMOVE : FAVORITE_ADD;\n      this.$store.dispatch(action, this.article.slug);\n    },\n    toggleFollow() {\n      if (!this.isAuthenticated) {\n        this.$router.push({ name: \"login\" });\n        return;\n      }\n      const action = this.article.following\n        ? FETCH_PROFILE_UNFOLLOW\n        : FETCH_PROFILE_FOLLOW;\n      this.$store.dispatch(action, {\n        username: this.profile.username\n      });\n    },\n    async deleteArticle() {\n      try {\n        await this.$store.dispatch(ARTICLE_DELETE, this.article.slug);\n        this.$router.push(\"/\");\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n};\n",{"version":3,"sources":["ArticleActions.vue"],"names":[],"mappings":";AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ArticleActions.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <!-- Used when user is also author -->\n  <span v-if=\"canModify\">\n    <router-link class=\"btn btn-sm btn-outline-secondary\" :to=\"editArticleLink\">\n      <i class=\"ion-edit\"></i> <span>&nbsp;Edit Article</span>\n    </router-link>\n    <span>&nbsp;&nbsp;</span>\n    <button class=\"btn btn-outline-danger btn-sm\" @click=\"deleteArticle\">\n      <i class=\"ion-trash-a\"></i> <span>&nbsp;Delete Article</span>\n    </button>\n  </span>\n  <!-- Used in ArticleView when not author -->\n  <span v-else>\n    <button class=\"btn btn-sm btn-outline-secondary\" @click=\"toggleFollow\">\n      <i class=\"ion-plus-round\"></i> <span>&nbsp;</span>\n      <span v-text=\"followUserLabel\" />\n    </button>\n    <span>&nbsp;&nbsp;</span>\n    <button\n      class=\"btn btn-sm\"\n      @click=\"toggleFavorite\"\n      :class=\"toggleFavoriteButtonClasses\"\n    >\n      <i class=\"ion-heart\"></i> <span>&nbsp;</span>\n      <span v-text=\"favoriteArticleLabel\" /> <span>&nbsp;</span>\n      <span class=\"counter\" v-text=\"favoriteCounter\" />\n    </button>\n  </span>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport {\n  FAVORITE_ADD,\n  FAVORITE_REMOVE,\n  ARTICLE_DELETE,\n  FETCH_PROFILE_FOLLOW,\n  FETCH_PROFILE_UNFOLLOW\n} from \"@/store/actions.type\";\n\nexport default {\n  name: \"RwvArticleActions\",\n  props: {\n    article: { type: Object, required: true },\n    canModify: { type: Boolean, required: true }\n  },\n  computed: {\n    ...mapGetters([\"profile\", \"isAuthenticated\"]),\n    editArticleLink() {\n      return { name: \"article-edit\", params: { slug: this.article.slug } };\n    },\n    toggleFavoriteButtonClasses() {\n      return {\n        \"btn-primary\": this.article.favorited,\n        \"btn-outline-primary\": !this.article.favorited\n      };\n    },\n    followUserLabel() {\n      return `${this.profile.following ? \"Unfollow\" : \"Follow\"} ${\n        this.article.author.username\n      }`;\n    },\n    favoriteArticleLabel() {\n      return this.article.favorited ? \"Unfavorite Article\" : \"Favorite Article\";\n    },\n    favoriteCounter() {\n      return `(${this.article.favoritesCount})`;\n    }\n  },\n  methods: {\n    toggleFavorite() {\n      if (!this.isAuthenticated) {\n        this.$router.push({ name: \"login\" });\n        return;\n      }\n      const action = this.article.favorited ? FAVORITE_REMOVE : FAVORITE_ADD;\n      this.$store.dispatch(action, this.article.slug);\n    },\n    toggleFollow() {\n      if (!this.isAuthenticated) {\n        this.$router.push({ name: \"login\" });\n        return;\n      }\n      const action = this.article.following\n        ? FETCH_PROFILE_UNFOLLOW\n        : FETCH_PROFILE_FOLLOW;\n      this.$store.dispatch(action, {\n        username: this.profile.username\n      });\n    },\n    async deleteArticle() {\n      try {\n        await this.$store.dispatch(ARTICLE_DELETE, this.article.slug);\n        this.$router.push(\"/\");\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n};\n</script>\n"]}]}