{"remainingRequest":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\документы\\GitHub\\one\\home\\src\\views\\Article.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\документы\\GitHub\\one\\home\\src\\views\\Article.vue","mtime":1626212836000},{"path":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680503952892},{"path":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1680504144232},{"path":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680503952892},{"path":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1680504319910}],"contextDependencies":[],"result":["\nimport { mapGetters } from \"vuex\";\nimport marked from \"marked\";\nimport store from \"@/store\";\nimport RwvArticleMeta from \"@/components/ArticleMeta\";\nimport RwvComment from \"@/components/Comment\";\nimport RwvCommentEditor from \"@/components/CommentEditor\";\nimport RwvTag from \"@/components/VTag\";\nimport { FETCH_ARTICLE, FETCH_COMMENTS } from \"@/store/actions.type\";\n\nexport default {\n  name: \"rwv-article\",\n  props: {\n    slug: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    RwvArticleMeta,\n    RwvComment,\n    RwvCommentEditor,\n    RwvTag\n  },\n  beforeRouteEnter(to, from, next) {\n    Promise.all([\n      store.dispatch(FETCH_ARTICLE, to.params.slug),\n      store.dispatch(FETCH_COMMENTS, to.params.slug)\n    ]).then(() => {\n      next();\n    });\n  },\n  computed: {\n    ...mapGetters([\"article\", \"currentUser\", \"comments\", \"isAuthenticated\"])\n  },\n  methods: {\n    parseMarkdown(content) {\n      return marked(content);\n    }\n  }\n};\n",{"version":3,"sources":["Article.vue"],"names":[],"mappings":";AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Article.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"article-page\">\n    <div class=\"banner\">\n      <div class=\"container\">\n        <h1>{{ article.title }}</h1>\n        <RwvArticleMeta :article=\"article\" :actions=\"true\"></RwvArticleMeta>\n      </div>\n    </div>\n    <div class=\"container page\">\n      <div class=\"row article-content\">\n        <div class=\"col-xs-12\">\n          <div v-html=\"parseMarkdown(article.body)\"></div>\n          <ul class=\"tag-list\">\n            <li v-for=\"(tag, index) of article.tagList\" :key=\"tag + index\">\n              <RwvTag\n                :name=\"tag\"\n                className=\"tag-default tag-pill tag-outline\"\n              ></RwvTag>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <hr />\n      <div class=\"article-actions\">\n        <RwvArticleMeta :article=\"article\" :actions=\"true\"></RwvArticleMeta>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-md-8 offset-md-2\">\n          <RwvCommentEditor\n            v-if=\"isAuthenticated\"\n            :slug=\"slug\"\n            :userImage=\"currentUser.image\"\n          >\n          </RwvCommentEditor>\n          <p v-else>\n            <router-link :to=\"{ name: 'login' }\">Sign in</router-link>\n            or\n            <router-link :to=\"{ name: 'register' }\">sign up</router-link>\n            to add comments on this article.\n          </p>\n          <RwvComment\n            v-for=\"(comment, index) in comments\"\n            :slug=\"slug\"\n            :comment=\"comment\"\n            :key=\"index\"\n          >\n          </RwvComment>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport marked from \"marked\";\nimport store from \"@/store\";\nimport RwvArticleMeta from \"@/components/ArticleMeta\";\nimport RwvComment from \"@/components/Comment\";\nimport RwvCommentEditor from \"@/components/CommentEditor\";\nimport RwvTag from \"@/components/VTag\";\nimport { FETCH_ARTICLE, FETCH_COMMENTS } from \"@/store/actions.type\";\n\nexport default {\n  name: \"rwv-article\",\n  props: {\n    slug: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    RwvArticleMeta,\n    RwvComment,\n    RwvCommentEditor,\n    RwvTag\n  },\n  beforeRouteEnter(to, from, next) {\n    Promise.all([\n      store.dispatch(FETCH_ARTICLE, to.params.slug),\n      store.dispatch(FETCH_COMMENTS, to.params.slug)\n    ]).then(() => {\n      next();\n    });\n  },\n  computed: {\n    ...mapGetters([\"article\", \"currentUser\", \"comments\", \"isAuthenticated\"])\n  },\n  methods: {\n    parseMarkdown(content) {\n      return marked(content);\n    }\n  }\n};\n</script>\n"]}]}