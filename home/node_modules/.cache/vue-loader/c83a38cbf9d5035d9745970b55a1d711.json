{"remainingRequest":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\документы\\GitHub\\one\\home\\src\\components\\CommentEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\документы\\GitHub\\one\\home\\src\\components\\CommentEditor.vue","mtime":1626212836000},{"path":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680503952892},{"path":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1680504144232},{"path":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680503952892},{"path":"D:\\документы\\GitHub\\one\\home\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1680504319910}],"contextDependencies":[],"result":["\nimport RwvListErrors from \"./ListErrors.vue\";\nimport { COMMENT_CREATE } from \"../store/actions.type.js\";\n\nexport default {\n  name: \"RwvCommentEditor\",\n  components: { RwvListErrors },\n  props: {\n    slug: { type: String, required: true },\n    content: { type: String, required: false },\n    userImage: { type: String, required: false }\n  },\n  data() {\n    return {\n      comment: this.content || null,\n      errors: {}\n    };\n  },\n  methods: {\n    onSubmit(slug, comment) {\n      this.$store\n        .dispatch(COMMENT_CREATE, { slug, comment })\n        .then(() => {\n          this.comment = null;\n          this.errors = {};\n        })\n        .catch(({ response }) => {\n          this.errors = response.data.errors;\n        });\n    }\n  }\n};\n",{"version":3,"sources":["CommentEditor.vue"],"names":[],"mappings":";AAsBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CommentEditor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <RwvListErrors :errors=\"errors\" />\n    <form class=\"card comment-form\" @submit.prevent=\"onSubmit(slug, comment)\">\n      <div class=\"card-block\">\n        <textarea\n          class=\"form-control\"\n          v-model=\"comment\"\n          placeholder=\"Write a comment...\"\n          rows=\"3\"\n        >\n        </textarea>\n      </div>\n      <div class=\"card-footer\">\n        <img :src=\"userImage\" class=\"comment-author-img\" />\n        <button class=\"btn btn-sm btn-primary\">Post Comment</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport RwvListErrors from \"./ListErrors.vue\";\nimport { COMMENT_CREATE } from \"../store/actions.type.js\";\n\nexport default {\n  name: \"RwvCommentEditor\",\n  components: { RwvListErrors },\n  props: {\n    slug: { type: String, required: true },\n    content: { type: String, required: false },\n    userImage: { type: String, required: false }\n  },\n  data() {\n    return {\n      comment: this.content || null,\n      errors: {}\n    };\n  },\n  methods: {\n    onSubmit(slug, comment) {\n      this.$store\n        .dispatch(COMMENT_CREATE, { slug, comment })\n        .then(() => {\n          this.comment = null;\n          this.errors = {};\n        })\n        .catch(({ response }) => {\n          this.errors = response.data.errors;\n        });\n    }\n  }\n};\n</script>\n"]}]}